#!/bin/bash

source /etc/slice-functions

function find_and_exec_slice () {
    local file=$1
    if [ -x /etc/mlab/current/init/verify ] ; then
        /etc/mlab/current/init/verify verify /opt/slice/current
    fi
    if [ -f $SLICEHOME/init/$file ] ; then
        su - $SLICENAME -c "cd $SLICEHOME; $SLICEHOME/init/$file" || ( \
                echo "Error: stopping due to error in $file" && exit 1 )
    fi
}
function find_and_exec_root () {
    local file=$1
    if [ -x /etc/mlab/current/init/verify ] ; then
        /etc/mlab/current/init/verify verify /etc/mlab/current
    fi
    if [ -x /etc/mlab/current/init/$file ] ; then
        /etc/mlab/current/init/$file || ( \
                echo "Error: stopping due to error in $file" && exit 1 )
    fi
}

function start_before_everything () {
    pgrep -f ".*" > /var/run/$SLICENAME/pids.beforestart
}

function kill_remaining () {
    local signal=$1
    KILLED=
    pgrep -v -f "slicectrl|rsync" > /var/run/$SLICENAME/pids.afterstop
    if [ -f /var/run/$SLICENAME/pids.beforestart ] ; then
        for pid in `comm -23 <( sort /var/run/$SLICENAME/pids.afterstop ) \
                             <( sort /var/run/$SLICENAME/pids.beforestart )`; do 
            echo "STILL RUNNING: " `ps ax | grep $pid`
            kill -$signal $pid
            KILLED="TRUE"
        done
    fi
    echo $KILLED
}

function stop_after_everything () {
    KILLED=$( kill_remaining TERM )
    if [ -n "$KILLED" ] ; then
        sleep 3
        KILLED=$( kill_remaining KILL )
    fi
}

function start_manager () {
    echo "starting slice manager.."
    find_and_exec_root start
}
function stop_manager () {
    echo "stopping slice manager.."
    find_and_exec_root stop
}

function start_slice () {
    echo "starting slice.."
    find_and_exec_slice start
}

function stop_slice () {
    echo "stopping slice.."
    find_and_exec_slice stop
}

function status_slice () {
    echo "slice status.."
    find_and_exec_slice status
}
