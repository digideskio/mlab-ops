
If you are an M-Lab experiment developer, this document will help you
prepare your experiment for deployment to M-lab.

OVERVIEW
========

    slice_example --

        This directory is a working example of an experiment used on M-Lab.


EXISTING SERVICES
=================

The following services are guaranteed to be running prior to installation of
your experiment package:

    * crond    -- logs all script output to /var/log/cron.output, not mail.
    * rsyslogd -- allows crond and other services to log to /var/log/cron, et al
    * rsync --daemon -- reads from /var/spool/$SLICENAME/ on port 7999 for
                        slices with a dedicated IP address.

EXISTING SCRIPTS
================

The following scripts are guaranteed to be installed prior to installation of
your experiment package:

    * /etc/slice-functions -- defines convenience functions in bash for
                configuring your experiment.

         - get_slice_ipv4() -- the IPv4 address assigned to this slice.
         - get_slice_ipv6() -- the IPv6 address assigned to this slice (if any)
         - get_slice_name() -- the name of this slice.  See also $SLICENAME.
         - get_site_name()  -- The site name, i.e. LGA02, NUQ01, etc.
         - $SLICENAME       -- predefined to value of get_slice_name()
         - $SLICEHOME       -- predefined to installation location of your
                               experiment package. To manage multiple versions
                               of experiments, $SLICEHOME is distinct from
                               $HOME.

    * /usr/bin/slice-restart  -- calls out to the root environment to fully
                                 shutdown your slice, then start it back up
                                 again.  This effectively simulates a machine
                                 restart.

    * /usr/bin/slice-recreate -- calls out to the root environment to delete
                                 and then create a new version of your slice.
                                 This effectively simulates a reinstall.

SCRIPTS EXPECTED FROM EXPERIMENT
================================

Your experiment package should define the following scripts.  These are the
entry points used by 'service slicectrl' to manage your experiment.

The scripts in slice_example/init/ will always run AS THE SLICE USER, not as
root.  Therefore, every action that requires elevated privileges must be taken
using 'sudo' or similar mechanism.

The CWD will be the root of the package directory.
    i.e. $SLICEHOME

Before any of the following scripts are executed, your experiment package will
be unpackaged, every file will be checksummed, and then marked read-only.

Therefore, the experiment package files should remain UNCHANGED.  If any
modifications are needed to files contained in the experiment package, they
should be copied outside of the experiment package and installed into the
filesystem.  i.e. /usr/local/*  /etc/*


Scripts in experiment package:

    init/initialize - optional.  

            If your experiment requires additional one-time configuration such
            as installation of dependent packages, setup of config files in
            httpd or other, this is the place to do it.  
            
            The initialize script should be idempotent; it should be possible
            to run it repeatedly without ill effect.  'initialize' will be run
            every time a new version of your slice package is installed.  But,
            if package dependencies have already been installed, then it is
            not necessary to repeat them, or new dependencies may have been
            added in the new version.

            If initialize fails, it should return a non-zero exit status.
            This will prevent the experiment from continuing with an
            un-initialized environment.

    init/start - required. 

            This script should start any processes needed by your service.
            Running 'start' more than once should behave correctly.
              
    init/stop -  required.
            
            This script should gracefully stop any processes that were started
            by your service. 

    init/status - optional, encouraged

            This script should return a status for the running service
            suitable for input to Nagios.  By default, service status is just
            the number of processes running.  You are encouraged to provide a
            more meaningful indication of service health and liveness.  This
            will assist you when observing the status of your service across
            M-Lab and it will assist M-Lab operators who may see issues first.


