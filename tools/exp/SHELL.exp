#!/usr/bin/expect

set timeout 60
set host [lindex $argv 0]
set user [lindex $argv 1]
set password [lindex $argv 2]
set method "ssh"
set dryrun "True"

log_user 0
if { "$method" == "ssh" } {
    set cont 0
    for { set retry 0 } { $retry < 2 } { incr retry 1 } {

        # NOTE: For unknown reason, some DRAC modules work only with
        #       stderr redirected to stdout, others only work without it.
        if { $retry == 0 } {
            spawn ssh -o StrictHostKeyChecking=no \
                      -o PasswordAuthentication=yes \
                      -o PubkeyAuthentication=no $user@$host 
        } else {
            spawn ssh -o StrictHostKeyChecking=no \
                      -o PasswordAuthentication=yes \
                      -o PubkeyAuthentication=no $user@$host 2>&1
        }

        expect {
            "Are you sure you want to continue connecting (yes/no)? " { 
                send "yes\n" ; 
                exp_continue 
            }
            "password: " { 
                send "$password\n" ; 
                exp_continue 
            }
            "Permission denied" { 
                send_user "DRAC ssh: username/password: $expect_out(0,string)";
                exit 
            }
            "Could not resolve hostname" { 
                send_user "DRAC ssh: $expect_out(0,string)"; 
                exit 
            }
            "Connection timed out" { 
                send_user "DRAC ssh: $expect_out(0,string)"; 
                exit 
            }
            -re "Received disconnect.*" { 
                send_user "DRAC ssh: $expect_out(0,string)"; 
                exit
            }
            -re "\\$|/.*>|.*$user.*#" { 
                send "\r"; 
            } 
            timeout { 
                send_user "DRAC ssh: timeout\n"; 
                exit; 
            }
            eof { 
                if { $cont == 1 } { 
                    send_user "DRAC ssh failed twice\n"; 
                    exit ;
                }
                set cont 1 
            }
        }
        if { $cont == 0 } { break; }
    }

    set prompt "\\$|/.*>" 
    expect -re $prompt { send "\r"; }
    interact {
        timeout 60 { 
            send_user "interactive shell timed out, leaving\n";
            return;
        }
        -re "exit" { send "\r"; return; }
        -o eof { puts "Found EOF\n" ; send_user "\n"; exit; }
    }
    expect -re $prompt { send "exit\r"; } 
    expect eof { send_user "\n" }
}
